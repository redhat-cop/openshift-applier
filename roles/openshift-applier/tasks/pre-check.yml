---

# Block to allow version checks to be skipped
- block:

    - name: "Exit if ansible version doesn't meet minimum requirements"
      fail:
        msg: "openshift-applier requires at least Ansible 2.5 in order to proceed"
      when:
        - "ansible_version.full is version('2.5','<')"

    - name: "Retrieve oc client version"
      shell: "{{ item }}"
      ignore_errors: true
      register: client_vers_check
      with_items:
        - "{{ client }} version -o yaml"
        - "{{ client }} version"

    # Block to handle oc command output
    # - only proceed if the oc command returned any output
    - block:

        - name: "Filter out the {{ client }} version number from yaml output"
          set_fact:
            client_version: "{{ (client_vers_check.results[0].stdout | from_yaml).clientVersion.major }}.{{ (client_vers_check.results[0].stdout | from_yaml).clientVersion.minor}}"
          when:
            - client_vers_check.results[0].stdout != ""

        - name: "Handle cases where yaml output is not available"
          set_fact:
            client_version: "{{ (client_vers_check.results[1].stdout | regex_search('^oc.+v([\\d.]+).*', '\\1'))[0] }}"
          when:
            - client_vers_check.results[1].stdout != ""
            - client_vers_check.results[0].stdout == ""

        - name: "Debug: Check {{ client }} version"
          debug:
            msg: "{{ client }} version is: {{ client_version }}"
            verbosity: 2

        - name: "Do *not* use the 'ignore_unknown_parameters' flag if 'oc' version is older than 3.7"
          set_fact:
            client_ignore_unknown_parameters: false
          when:
            - client == 'kubectl' and client_version is version('1.7','<')
            - client == 'oc' and client_version is version('3.7','<')

      when:
        - client_vers_check is defined
        - client_vers_check.results[0].stdout is defined or client_vers_check.results[1].stdout is defined
        - client_vers_check.results[0].stdout|trim != "" or client_vers_check.results[1].stdout|trim != ""
  when:
    - skip_version_checks is undefined
